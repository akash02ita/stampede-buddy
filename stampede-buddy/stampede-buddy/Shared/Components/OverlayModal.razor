@inject AppState AppState
@implements IDisposable

@if (AppState.ShowOverlay)
{

    @if (AppState.CurrentOverlayState == OverlayState.NAVIGATION)
    {
        <div class="navigation-overlay-container">

            <div id="navigate-header" class="">
                <h3 class="text-center">Heading to @AppState.NavigationDestination</h3>
                <div class="d-flex justify-content-center align-items-center gap-4">
                    <div class="mt-3">
                        <img class="nav-dir-icon" src=" https://cdn-icons-png.flaticon.com/512/271/271226.png" />
                    </div>
                    <div class="mt-3 lead text-center">Turn right in 30m</div>
                </div>
                <p class="text-center w-100 mt-2">(this feature is still under development)</p>
            </div>

            <div id="nav-menu">
                <div class="row w-100">
                    <div class="btn btn-danger btn-block btn" @onclick="dismissOverlay">Exit Navigation</div>

                </div>
            </div>

        </div>
    } else
    {
         <div class="overlay-container">
                <div>

                </div>
                <button @onclick="dismissOverlay">back</button>
        </div>   
    }

} else
{
    
}


@code {
    [Parameter]
    public bool Show { get; set; } = false;

    private void dismissOverlay()
    {
        AppState.SetOverlayVisible(false);

        if (AppState.CurrentOverlayState == OverlayState.NAVIGATION)
        {
            AppState.ToggleCollapsed();
        }

        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        AppState.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        AppState.OnChange -= StateHasChanged;
    }


}
