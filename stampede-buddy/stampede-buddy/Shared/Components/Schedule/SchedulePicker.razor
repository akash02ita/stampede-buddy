@inject AppState AppState

<div class="events-main-content">

    <div id="events-container" class="container-fluid">

        <BackButton   Title="Pick a Schedule"/>

        <div id="filter-panel" class="mb-2 row justify-content-center text-center">
            <div class="col-1 text-center">
                l
            </div>
            <div class="col-6">Option <span>1</span> / 6</div>
            <div class="col-1 text-center"> r </div>
        </div>

        <div class="row">
            <hr />
        </div>

        @if (AppState.Schedule.Count > 0) 
        {
            //List<List<ScheduledEvent>> permutations = computeScheduleOptions(AppState.Schedule);
            //List<ScheduledEvent> selectedOption = permutations[optionsIndex];
            <ScheduleView Events="@AppState.Schedule" />
        } else {
            <ScheduleView /> // if the user has no events in their schedule, the component will render error message.
        }
        

    </div>

        <div id="schedule-picker-menu" class="d-flex flex-column justify-content-center align-items-center">

            <img class="schedule-map" src="images/map.png" />
            <Continue className="mt-2 w-100 btn btn-primary btn-block btn-lg " ButtonText="Use this schedule!" />
        </div>

    </div>
@code {


    [Parameter]
    public EventCallback<ScheduleScreen> setScreenCallback { get; set; }
    [Parameter]
    public ScheduleScreen currentScreen { get; set; } = ScheduleScreen.DAY_PICKER;


    private List<List<ScheduledEvent>> computeScheduleOptions (List<ScheduledEvent> desiredEvents)
    {
        return new List<List<ScheduledEvent>>();
    }

    private int optionsIndex { get; set; } = 0;

    }

